Grade Checkpoint #1: encoding

1. JOP -- use the JOP's we already know, plus the new drop-down - No Scanner, no syso
2. executable jar
3. JOP drop-down class example - ask do you want to encode, decode, or crack, or exit?
-- use a switch-case (class example) branch, right now we only have encode
4. for encoding - ask for the plain text msg - another JOP (no Scanner, no syso)
5. ask for the key - another JOP
6. display the encoded msg - another JOP
7. loop - back to the first drop-down JOP
either go again, or a graceful exit - another JOP



Grade Checkpoint #2: decoding

1. All JOP's executable jar (no scanner or syso)
2. Select decode, you enter the coded msg
3. Enter the key
4. Program decodes, JOP's the decoded msg
5. How? When you encode you shift alpha to the right (add key); decode reverse that
-- shift alpha to the left (subtract key). Easy! Sort of ... problem is the
-- z-wrap becomes the a-wrap. How's that for an interesting challenge?!




Grade Checkpoint #3: cracking (don't know the key)